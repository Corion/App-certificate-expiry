#!perl
use 5.020;
use feature 'signatures';
no warnings 'experimental::signatures';

use Getopt::Long;
use Pod::Usage;
use Net::SSL::ExpireDate;

GetOptions(
    'ssl=s' => \my $openssl,
    'limit=s' => \my $limit,
    'verbose' => \my $verbose,
);

=head1 NAME

certificate-expiry - display certificate expiry for domains

=head1 SYNOPSIS

    certificate-expiry expired.badssl.com

    certificate-expiry --limit=100 example.com

=head1 OPTIONS

=over 4

=item B<--limit> - number of days before certificate expiry

=back

=cut

$limit   //= 19; # as Let's Encrypt has a renewal limit of 20 days

sub get_expiry( $domain ) {
    my $info = Net::SSL::ExpireDate->new( ssl => $domain );
    return $info
}

my $today = DateTime->now();
for my $domain (@ARGV) {
    my $expiry = get_expiry( $domain );
    my $duration = $expiry->not_after->delta_days( $today );
    my $days = $duration->in_units('days');
    if( $duration ->is_negative ) {
        say "$domain has expired.";

    } elsif( $duration->in_units('days') < $limit ) {
        say "$domain will expire in $days days.";

    } elsif( $verbose ) {
        say "$domain will expire in $days days, above $limit days.";
    };
}
